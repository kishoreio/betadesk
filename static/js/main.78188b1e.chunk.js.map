{"version":3,"sources":["component/Login/LoginField.js","component/CommonComponents/Button.js","component/Login/Login.js","component/NavBar/NavBar.js","component/SidePanel/SidePanel.js","component/ViewPort/ViewPort.js","utils/colors.js","constants/serverUrls.js","services/updateData.js","component/ViewTicket/DiscussionTab.js","component/CommonComponents/TicketSelect.js","services/fetchData.js","services/postData.js","component/ViewTicket/ViewTicket.js","component/TicketList/TicketList.js","component/CreateTicket/TicketField.js","component/CreateTicket/CreateTicket.js","utils/chartData.js","component/OverView/OverViewCount.js","component/OverView/OverView.js","component/DashBoard/DashBoard.js","App.js","index.js","resources/logo.png","resources/logo-small.png"],"names":["LoginField","value","type","placeholder","func","className","toUpperCase","slice","name","onChange","required","Button","onClick","Login","changeLoginStatus","useState","email","password","login","setLogin","getLoginDetails","e","key","target","src","logo","alt","preventDefault","NavBar","isLogged","color","SidePanel","to","size","opacity","ViewPort","props","children","colorObj","Low","Medium","High","Urgent","colorArr","priorityColors","userColors","rand","Math","floor","random","PRIMARY_SERVER","updateData","id","data","Promise","resolve","reject","fetch","method","body","JSON","stringify","headers","err","DiscussionTab","discussion","updateDiscussionData","userColor","input","setInput","newDiscussion","setNewDiscussion","useEffect","a","res","json","newData","console","log","execute","length","map","item","index","style","background","comments","rows","TicketSelect","field","options","optionArr","split","htmlFor","disabled","selected","fetchData","query","URL","postData","post","api","ViewTicket","singleTicket","setSingleTicket","setDiscussion","status","priority","department","agent","updateTicket","setUpdateTicket","window","location","hash","match","ticketData","dataArr","discussionArr","discussions","useCallback","updateTicketProperties","_id","subject","ticketNo","createdAt","description","setTicketData","filter","setFilter","sendFilterData","setSendFilterData","filterData","onSubmitFilterData","reverse","error","borderColor","pathname","search","TicketField","CreateTicket","ticket","setTicket","setPost","changeTicketState","Date","toLocaleDateString","scales","yAxes","ticks","min","max","step","OverViewCount","text","start","end","duration","OverView","statusCount","setStatusCount","departmentData","setDepartmentData","agents","setAgents","labels","datasets","label","backgroundColor","DashBoard","path","TicketList","App","setIsLogged","exact","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.78188b1e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LoginField = ({ value, type, placeholder, func }) => {\n  return (\n    <>\n      <label className=\"label\">{`${type[0].toUpperCase()}${type.slice(1)}`}</label>\n      <input\n        type={type}\n        value={value}\n        name={type}\n        onChange={func}\n        placeholder={placeholder}\n        required\n        className=\"login-input\"\n      />\n    </>\n  );\n};\n\nexport default LoginField;\n","import React from \"react\";\n\nconst Button = ({ value, className, func }) => {\n  return <input type=\"submit\" value={value} className={`default-css ${className}`} onClick={func} />;\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport LoginField from \"./LoginField\";\nimport Button from \"../CommonComponents/Button\";\nimport logo from \"../../resources/logo.png\";\nimport \"./login.css\";\n\nconst Login = ({ changeLoginStatus }) => {\n  const [login, setLogin] = useState({ email: \"\", password: \"\" });\n  const getLoginDetails = (e) => {\n    const key = e.target.name;\n    const value = e.target.value;\n    setLogin({ ...login, [key]: value });\n  };\n  const validateLoginDetails = (e) => {\n    e.preventDefault();\n    if (login.email === \"kishore@betadesk.com\" && login.password === \"admin\") {\n      changeLoginStatus();\n    }\n  };\n  const { email, password } = login;\n  return (\n    <section className=\"login-container\">\n      <figure className=\"logo-container\">\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <div className=\"line\" />\n        <figcaption className=\"logo-text\">Beta Desk</figcaption>\n      </figure>\n      <h1 className=\"welcome-text\">Login to your Betadesk account</h1>\n      <form className=\"form\">\n        <LoginField type=\"email\" placeholder=\"Enter your email\" value={email} func={getLoginDetails} />\n        <LoginField type=\"password\" placeholder=\"Enter your password\" value={password} func={getLoginDetails} />\n        <Button value=\"Log In\" className=\"btn-login\" func={validateLoginDetails} />\n      </form>\n      <p className=\"login-demo\">E-mail: kishore@betadesk.com</p>\n      <p className=\"login-demo\">Password: admin</p>\n    </section>\n  );\n};\nexport default Login;\n","import React from \"react\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport \"./navbar.css\";\nimport Button from \"../CommonComponents/Button\";\n\nconst NavBar = ({ isLogged, changeLoginStatus }) => {\n  return (\n    <section className=\"nav-container\">\n      <h1>Hi Kishore, Welcome to BetaDesk</h1>\n      {isLogged ? (\n        <div className=\"nav-container-logout\">\n          <FiLogOut color=\"#183247\" />\n          <Button value=\"LogOut\" className=\"logout-btn\" func={changeLoginStatus} />\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RiDashboardLine, RiFolder2Line, RiMailAddLine } from \"react-icons/ri\";\nimport logo from \"../../resources/logo-small.png\";\nimport \"./sidePanel.css\";\n\nconst SidePanel = () => {\n  return (\n    <section className=\"side_panel-container\">\n      <img src={logo} alt=\"logo\" className=\"side_panel-logo\" />\n      <div className=\"side_panel-icons\">\n        <Link to=\"/dashboard/overview\">\n          <div className=\"side_panel-icon\">\n            <RiDashboardLine size=\"1.5rem\" color=\"white\" opacity=\"0.5\" />\n            <p>OverView</p>\n          </div>\n        </Link>\n        <Link to=\"/dashboard/create-tickets\">\n          <div className=\"side_panel-icon\">\n            <RiMailAddLine size=\"1.5rem\" color=\"white\" opacity=\"0.5\" />\n            <p>Create Ticket</p>\n          </div>\n        </Link>\n        <Link to=\"/dashboard/tickets\">\n          <div className=\"side_panel-icon\">\n            <RiFolder2Line size=\"1.5rem\" color=\"white\" opacity=\"0.5\" />\n            <p>View Tickets</p>\n          </div>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default SidePanel;\n","import React from \"react\";\nimport \"./viewport.css\";\n\nconst ViewPort = (props) => {\n  return <main className=\"viewport-container\">{props.children}</main>;\n};\n\nexport default ViewPort;\n","const colorObj = {\n  Low: \"#2ECC71\",\n  Medium: \"#5DADE2\",\n  High: \" #F4D03F\",\n  Urgent: \"red\",\n};\n\nconst colorArr = [\"#EC407A\", \"#AB47BC\", \"#5C6BC0\", \"#26A69A\", \"#FFA726\", \"#8D6E63\"];\n\nexport const priorityColors = (key) => {\n  const color = colorObj[key];\n  return color;\n};\n\nexport const userColors = () => {\n  const rand = Math.floor(Math.random() * (5 - 0 + 1) + 0);\n  const color = colorArr[rand];\n  return color;\n};\n","export const PRIMARY_SERVER = \"https://betadesk.herokuapp.com/api/v1\";\n\nexport const GET_ALL_DATA = \"/tickets\";\n\nexport const CREATE_NEW_DATA = \"/tickets\";\n\nexport const UPDATE_A_TICKET = \"/tickets\";\n","import { PRIMARY_SERVER, UPDATE_A_TICKET } from \"../constants/serverUrls\";\n\nconst updateData = (id, data, type) => {\n  const URL = PRIMARY_SERVER + UPDATE_A_TICKET;\n  return new Promise((resolve, reject) => {\n    try {\n      const newData = fetch(URL, {\n        method: \"PATCH\",\n        body: JSON.stringify({ id, data, type }),\n        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      });\n      resolve(newData);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nexport default updateData;\n","import React, { useState, useEffect } from \"react\";\nimport { RiMessage3Line } from \"react-icons/ri\";\nimport Button from \"../CommonComponents/Button\";\nimport updateData from \"../../services/updateData\";\n\nconst DiscussionTab = ({ discussion, id, updateDiscussionData, userColor }) => {\n  const [input, setInput] = useState(\"\");\n  const [newDiscussion, setNewDiscussion] = useState([]);\n  const addTextToState = (e) => {\n    setInput(e.target.value);\n  };\n  const addDiscussion = () => {\n    setInput(\"\");\n    if (input !== \"\") {\n      setNewDiscussion([...discussion, { name: \"kishore\", comments: input }]); //change name\n    }\n  };\n  useEffect(() => {\n    async function execute() {\n      try {\n        const res = await updateData(id, newDiscussion, \"discussion\");\n        const newData = await res.json();\n        updateDiscussionData(newData);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    execute();\n  }, [id, newDiscussion, updateDiscussionData]);\n  return (\n    <section className=\"discussion-container\">\n      <div className=\"discussion-title\">\n        <RiMessage3Line size=\"2.5rem\" />\n        <h1>Discussions</h1>\n      </div>\n      <hr />\n      <div className=\"discussion-message\">\n        {discussion.length === 0 ? (\n          <p>No more discussion. Start now</p>\n        ) : (\n          discussion.map((item, index) => {\n            return (\n              <div key={index} className=\"discussion-person\">\n                <div className=\"discussion-user\" style={{ background: userColor }}>\n                  <span>{item.name[0].toUpperCase()}</span>\n                </div>\n                <div className=\"discussion-details\">\n                  <p>{item.name}</p>\n                  <p>{item.comments}</p>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      <hr />\n      <div className=\"discussion-addnote\">\n        <textarea rows=\"3\" value={input} onChange={addTextToState}></textarea>\n        <Button value=\"Add Note\" className=\"discussion-btn\" func={addDiscussion} />\n      </div>\n    </section>\n  );\n};\n\nexport default DiscussionTab;\n","import React from \"react\";\n\nconst TicketSelect = ({ field, options, value, func }) => {\n  const optionArr = options.split(\" \");\n  return (\n    <div className=\"create_ticket-field\">\n      <label htmlFor={field}>{`${field[0].toUpperCase()}${field.slice(1)}`}</label>\n      <select name={field} id={field} className=\"default-css ticket-field\" onChange={func}>\n        <option disabled selected>\n          {`Select a ${field}`}\n        </option>\n        {optionArr.map((item, index) => (\n          <option value={item} key={index}>\n            {item}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default TicketSelect;\n","import { PRIMARY_SERVER, GET_ALL_DATA } from \"../constants/serverUrls\";\n\nconst fetchData = (query) => {\n  let URL = null;\n  if (query === \"all\") {\n    URL = PRIMARY_SERVER + GET_ALL_DATA;\n  } else if (query === \"overview\") {\n    URL = PRIMARY_SERVER + GET_ALL_DATA + `/${query}`;\n  } else {\n    URL = PRIMARY_SERVER + GET_ALL_DATA + \"?id=\" + query;\n  }\n  return new Promise((resolve, reject) => {\n    async function execute() {\n      try {\n        const res = await fetch(URL);\n        const data = await res.json();\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    }\n    execute();\n  });\n};\n\nexport default fetchData;\n","import { PRIMARY_SERVER, UPDATE_A_TICKET } from \"../constants/serverUrls\";\n\nconst postData = (post, api) => {\n  let URL = null;\n  if (!api) {\n    URL = PRIMARY_SERVER + UPDATE_A_TICKET;\n  } else {\n    URL = PRIMARY_SERVER + UPDATE_A_TICKET + api;\n  }\n  console.log(post);\n  console.log(URL);\n  return new Promise((resolve, reject) => {\n    async function execute() {\n      try {\n        const res = await fetch(URL, {\n          method: \"POST\",\n          body: JSON.stringify(post),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        });\n        const data = await res.json();\n        resolve(data);\n      } catch (err) {\n        reject(err);\n      }\n    }\n    execute();\n  });\n};\n\nexport default postData;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RiBookmarkLine, RiPencilLine, RiDeleteBin2Line } from \"react-icons/ri\";\nimport { FadeLoader } from \"react-spinners\";\nimport { priorityColors, userColors } from \"../../utils/colors\";\nimport DiscussionTab from \"./DiscussionTab\";\nimport TicketSelect from \"../CommonComponents/TicketSelect\";\nimport Button from \"../CommonComponents/Button\";\nimport fetchData from \"../../services/fetchData\";\nimport postData from \"../../services/postData\";\nimport updateData from \"../../services/updateData\";\nimport \"./viewticket.css\";\n\nconst ViewTicket = () => {\n  const [singleTicket, setSingleTicket] = useState([]);\n  const [discussion, setDiscussion] = useState([]);\n  const [updateTicket, setUpdateTicket] = useState({\n    type: \"\",\n    status: \"\",\n    priority: \"\",\n    department: \"\",\n    agent: \"\",\n  });\n  const [query] = window.location.hash.match(/(?<=id=).*/gm);\n  useEffect(() => {\n    async function execute() {\n      const { data: ticketData } = await fetchData(query);\n      const dataArr = ticketData.ticketData;\n      const { type, status, priority, department, agent } = dataArr[0];\n      const discussionArr = ticketData.ticketData[0].discussions;\n      setSingleTicket(dataArr);\n      setUpdateTicket({ type, status, priority, department, agent });\n      setDiscussion(discussionArr);\n    }\n    execute();\n  }, [query]);\n  const updateDiscussionData = useCallback((data) => {\n    const { discussions } = data.data.discussion;\n    if (discussions) {\n      setDiscussion(discussions);\n    }\n  }, []);\n  const updateTicketProperties = (e) => {\n    const key = e.target.name;\n    const value = e.target.value;\n    setUpdateTicket({ ...updateTicket, [key]: value });\n  };\n  const sendUpdatedProperties = () => {\n    async function execute() {\n      const id = query;\n      try {\n        const res = await updateData(id, updateTicket, \"properties\");\n        let newData = await res.json();\n        newData = newData.data.discussion;\n        setSingleTicket([newData]);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    execute();\n  };\n  const deleteTicket = (id) => {\n    postData({ ticketNo: id }, \"/delete\");\n  };\n  const { type, status, priority, department, agent } = updateTicket;\n  if (singleTicket.length === 0) return <FadeLoader />;\n  return (\n    <section className=\"view_ticket-container\">\n      {singleTicket.map((item) => {\n        const background = priorityColors(item.priority);\n        const userColor = userColors();\n        return (\n          <div key={item._id} className=\"view_ticket-content\">\n            <div className=\"view_ticket-main\">\n              <div className=\"view_ticket-subject\">\n                <RiBookmarkLine size=\"1.5rem\" opacity=\"0.7\" />\n                <p>{item.subject}</p>\n                {item.status === \"Closed\" ? <p>[#Closed]</p> : null}\n              </div>\n              <div className=\"view_ticket-status\">\n                <div style={{ background }}></div>\n                <p>{item.priority}</p>\n                <Link to=\"/dashboard/tickets\">\n                  <div className=\"view_ticket-delete\">\n                    <RiDeleteBin2Line color=\"white\" />\n                    <Button value=\"Delete\" className=\"view_ticket-btn\" func={() => deleteTicket(item.ticketNo)} />\n                  </div>\n                </Link>\n              </div>\n            </div>\n            <div className=\"view_ticket-assign\">\n              <p>Created by {item.name}</p>\n              <hr />\n              <p>Assigned to {item.agent}</p>\n              <hr />\n              <p>Status: {item.status}</p>\n              <hr />\n              <p>Department: {item.department}</p>\n            </div>\n            <div className=\"view_ticket-box\">\n              <div className=\"view_ticket-box1\">\n                <div className=\"view_ticket-name\" style={{ background: userColor }}>\n                  <span>{item.name[0].toUpperCase()}</span>\n                </div>\n                <div>\n                  <p>{`${item.name} reported on ${item.createdAt}`}</p>\n                  <p>Ticket No: #{item.ticketNo}</p>\n                </div>\n              </div>\n              <hr className=\"view_ticket-line\" />\n              <div className=\"view_ticket-box2\">\n                <p>{item.description}</p>\n              </div>\n            </div>\n            <DiscussionTab\n              discussion={discussion}\n              id={query}\n              updateDiscussionData={updateDiscussionData}\n              userColor={userColor}\n            />\n          </div>\n        );\n      })}\n      <section className=\"update_container\">\n        <div className=\"update_content\">\n          <div className=\"update_title\">\n            <RiPencilLine size=\"1.5rem\" color=\"#183247\" />\n            <h1>Update</h1>\n          </div>\n          <TicketSelect\n            field=\"type\"\n            options=\"Question Problem Request Incident Refund\"\n            value={type}\n            func={updateTicketProperties}\n          />\n          <TicketSelect\n            field=\"status\"\n            options=\"Open Pending Resolved Closed\"\n            value={status}\n            func={updateTicketProperties}\n          />\n          <TicketSelect\n            field=\"priority\"\n            options=\"Low Medium High Urgent\"\n            value={priority}\n            func={updateTicketProperties}\n          />\n          <TicketSelect\n            field=\"department\"\n            options=\"Billings Sales QA Shipping Delivery\"\n            value={department}\n            func={updateTicketProperties}\n          />\n          <TicketSelect\n            field=\"agent\"\n            options=\"Sam Jimmy Anderson Micheal\"\n            value={agent}\n            func={updateTicketProperties}\n          />\n          <Button value=\"Update\" className=\"update-btn\" func={sendUpdatedProperties} />\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default ViewTicket;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FiPhone, FiUserPlus, FiActivity, FiFilter } from \"react-icons/fi\";\nimport { priorityColors, userColors } from \"../../utils/colors\";\nimport fetchData from \"../../services/fetchData\";\nimport postData from \"../../services/postData\";\nimport TicketSelect from \"../CommonComponents/TicketSelect\";\nimport Button from \"../CommonComponents/Button\";\nimport \"./ticketlist.css\";\n\nconst ViewTicket = () => {\n  const [ticketData, setTicketData] = useState([]);\n  const [filter, setFilter] = useState({});\n  const [sendFilterData, setSendFilterData] = useState({});\n  const filterData = (e) => {\n    const key = e.target.name;\n    const value = e.target.value;\n    setFilter({ ...filter, [key]: value });\n  };\n  const onSubmitFilterData = (e) => {\n    e.preventDefault();\n    if (e.target.value !== \"Clear\") {\n      setSendFilterData(filter);\n    } else if (e.target.value === \"Clear\") {\n      setSendFilterData({});\n    }\n  };\n\n  useEffect(() => {\n    async function execute() {\n      try {\n        const data = await fetchData(\"all\");\n        const {\n          data: { ticketData },\n        } = data;\n        setTicketData(ticketData.reverse());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    execute();\n  }, []);\n\n  useEffect(() => {\n    async function execute() {\n      try {\n        const data = await postData(sendFilterData, \"/filter\");\n        setTicketData(data.data.filterData);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    execute();\n  }, [sendFilterData]);\n  return (\n    <section className=\"ticket_list-container\">\n      <div className=\"ticket_list-content\">\n        {ticketData.map((item) => {\n          const background = priorityColors(item.priority);\n          const userColor = userColors();\n          return (\n            <div key={item._id} className=\"ticket_list-width\">\n              <div className=\"ticket_list-box\" style={{ borderColor: userColor }}>\n                <div className=\"ticket_list-name\" style={{ background: userColor }}>\n                  <span>{item.name[0].toUpperCase()}</span>\n                </div>\n                <hr className=\"ticket_list-line\" />\n                <div className=\"ticket_list-detail\">\n                  <div className=\"ticket_list-a\">\n                    <Link\n                      to={{\n                        pathname: \"/dashboard/view-ticket\",\n                        search: `?id=${item.ticketNo}`,\n                      }}\n                    >\n                      <p>\n                        {`${item.subject}  #${item.ticketNo}`}\n                        <span className=\"ticket_list-click\">(click to view)</span>\n                      </p>\n                    </Link>\n                  </div>\n                  <div className=\"ticket_list-from\">\n                    <div className=\"ticket_list-group\">\n                      <FiPhone />\n                      <p>{item.name}</p>\n                    </div>\n                    <span>.</span>\n                    <p>Issue related to {item.department}</p>\n                    <span>.</span>\n                    <p className=\"ticket_list-date\">Created on {item.createdAt}</p>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"ticket_list-status\">\n                    <div className=\"ticket_list-priority\" style={{ background }}></div>\n                    <p>{item.priority}</p>\n                  </div>\n                  <div className=\"ticket_list-status\">\n                    <FiUserPlus />\n                    <p>{item.agent}</p>\n                  </div>\n                  <div className=\"ticket_list-status\">\n                    <FiActivity />\n                    <p>{item.status}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"ticket_list-filter\">\n        <div className=\"ticket_list_title\">\n          <FiFilter size=\"1.5rem\" color=\"#183247\" />\n          <h1>Filter</h1>\n        </div>\n        <div className=\"ticket_list-main\">\n          <TicketSelect field=\"type\" options=\"Question Problem Request Incident Refund\" func={filterData} />\n          <TicketSelect field=\"status\" options=\"Open Pending Resolved Closed\" func={filterData} />\n          <TicketSelect field=\"priority\" options=\"Low Medium High Urgent\" func={filterData} />\n          <TicketSelect field=\"department\" options=\"Billings Sales QA Shipping Delivery\" func={filterData} />\n          <TicketSelect field=\"agent\" options=\"Sam Jimmy Anderson Micheal\" func={filterData} />\n          <div className=\"ticket_list-btn\">\n            <Button value=\"Apply Filter\" className=\"filter-btn\" func={onSubmitFilterData} />\n            <Button value=\"Clear\" className=\"filter-btn\" func={onSubmitFilterData} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ViewTicket;\n","import React from \"react\";\n\nconst TicketField = ({ field, value, func }) => {\n  return (\n    <div className=\"create_ticket-field\">\n      <label htmlFor={field}>{`${field[0].toUpperCase()}${field.slice(1)}`}</label>\n      <input\n        type=\"text\"\n        id={field}\n        name={field}\n        value={value}\n        className=\"default-css ticket-field\"\n        required\n        onChange={func}\n      />\n    </div>\n  );\n};\n\nexport default TicketField;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"../CommonComponents/Button\";\nimport TicketField from \"./TicketField\";\nimport TicketSelect from \"../CommonComponents/TicketSelect\";\nimport postData from \"../../services/postData\";\nimport \"./createticket.css\";\n\nconst CreateTicket = () => {\n  const [ticket, setTicket] = useState({\n    name: \"\",\n    subject: \"\",\n    type: \"\",\n    status: \"\",\n    priority: \"\",\n    department: \"\",\n    agent: \"\",\n    description: \"\",\n  });\n  const [post, setPost] = useState();\n  useEffect(() => {\n    async function execute() {\n      try {\n        const data = await postData(post);\n        if (data.status === \"success\") {\n          setTicket({\n            name: \"\",\n            subject: \"\",\n            type: \"\",\n            status: \"\",\n            priority: \"\",\n            department: \"\",\n            agent: \"\",\n            description: \"\",\n          });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    execute();\n  }, [post]);\n  const changeTicketState = (e) => {\n    const key = e.target.name;\n    const value = e.target.value;\n    setTicket({ ...ticket, [key]: value });\n  };\n  const postTicketToServer = () => {\n    const ticketNo = Math.floor(Math.random() * 10000) + 1;\n    const createdAt = new Date().toLocaleDateString();\n    setPost({ ...ticket, ticketNo, createdAt });\n  };\n  const { name, subject, type, status, priority, department, agent, description } = ticket;\n  return (\n    <section className=\"create_ticket-container\">\n      <TicketField field=\"name\" value={name} func={changeTicketState} />\n      <TicketField field=\"subject\" value={subject} func={changeTicketState} />\n      <TicketSelect\n        field=\"type\"\n        options=\"Question Problem Request Incident Refund\"\n        value={type}\n        func={changeTicketState}\n      />\n      <TicketSelect field=\"status\" options=\"Open Pending Resolved Closed\" value={status} func={changeTicketState} />\n      <TicketSelect field=\"priority\" options=\"Low Medium High Urgent\" value={priority} func={changeTicketState} />\n      <TicketSelect\n        field=\"department\"\n        options=\"Billings Sales QA Shipping Delivery\"\n        value={department}\n        func={changeTicketState}\n      />\n      <TicketSelect field=\"agent\" options=\"Sam Jimmy Anderson Micheal\" value={agent} func={changeTicketState} />\n      <div className=\"create_ticket-field\">\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          className=\"default-css ticket-field\"\n          rows=\"5\"\n          name=\"description\"\n          value={description}\n          onChange={changeTicketState}\n        ></textarea>\n      </div>\n      <div className=\"create_ticket-field\">\n        <Button value=\"Create Ticket\" className=\"ticket-btn\" func={postTicketToServer} />\n      </div>\n    </section>\n  );\n};\n\nexport default CreateTicket;\n","export const options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          min: 0,\n          max: 10,\n          step: 1,\n        },\n      },\n    ],\n  },\n};\n\nexport const chartData = (arr) => {\n  return {\n    labels: [\"Billings\", \"Sales\", \"QA\", \"Shipping\", \"Delivery\"],\n    datasets: [\n      {\n        label: \"No.of Tickets Per Department\",\n        data: arr,\n        borderColor: [\n          \"rgba(252, 92, 101, 1)\",\n          \"rgba(253, 150, 68, 1)\",\n          \"rgba(254, 211, 48, 1)\",\n          \"rgba(75, 123, 236, 1)\",\n          \"rgba(165, 94, 234, 1)\",\n        ],\n        backgroundColor: [\n          \"rgba(252, 92, 101, 0.5)\",\n          \"rgba(253, 150, 68, 0.5)\",\n          \"rgba(254, 211, 48, 0.5)\",\n          \"rgba(75, 123, 236, 0.5)\",\n          \"rgba(165, 94, 234, 0.5)\",\n        ],\n      },\n    ],\n  };\n};\n","import React from 'react';\nimport CountUp from 'react-countup';\n\nconst OverViewCount = ({ text, start, end }) => {\n  return (\n    <div className=\"overview_count\">\n      <h1>{text}</h1>\n      <CountUp start={start} end={end} duration={3} />\n    </div>\n  );\n};\n\nexport default OverViewCount;\n","import React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { options, chartData } from \"../../utils/chartData\";\nimport OverViewCount from \"./OverViewCount\";\nimport fetchData from \"../../services/fetchData\";\nimport \"./overview.css\";\n\nconst OverView = () => {\n  const [statusCount, setStatusCount] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [agents, setAgents] = useState([]);\n  useEffect(() => {\n    async function execute() {\n      try {\n        const data = await fetchData(\"overview\");\n        setStatusCount(data.data.status);\n        setDepartmentData(data.data.department);\n        setAgents(data.data.agent);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    execute();\n  }, []);\n  if (statusCount.length === 0 || departmentData.length === 0) return <p />;\n  const data = chartData(departmentData);\n  return (\n    <section className=\"overview_overall\">\n      <div className=\"overview_total\">\n        <OverViewCount text=\"Open\" start={0} end={statusCount[0]} />\n        <OverViewCount text=\"Pending\" start={0} end={statusCount[1]} />\n        <OverViewCount text=\"Resolved\" start={0} end={statusCount[2]} />\n        <OverViewCount text=\"Closed\" start={0} end={statusCount[3]} />\n      </div>\n      <div className=\"overview_chart\">\n        <div className=\"overview_bar\">\n          <Bar data={data} options={options} />\n        </div>\n        <div className=\"overview_available\">\n          <h1>Assigned Agents</h1>\n          {agents.map((item, index) => {\n            return (\n              <div className=\"overview_agent\" key={index}>\n                <FaUserCircle />\n                <h1>{item}</h1>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default OverView;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport NavBar from \"../NavBar/NavBar\";\nimport SidePanel from \"../SidePanel/SidePanel\";\nimport ViewPort from \"../ViewPort/ViewPort\";\nimport ViewTicket from \"../ViewTicket/ViewTicket\";\nimport TicketList from \"../TicketList/TicketList\";\nimport CreateTicket from \"../CreateTicket/CreateTicket\";\nimport OverView from \"../OverView/OverView\";\nimport \"./dashboard.css\";\n\nconst DashBoard = ({ isLogged, changeLoginStatus }) => {\n  if (!isLogged) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <main className=\"dashboard-container\">\n      <NavBar isLogged={isLogged} changeLoginStatus={changeLoginStatus} />\n      <section className=\"split-view\">\n        <SidePanel />\n        <Route path=\"/dashboard/overview\">\n          <ViewPort>\n            <OverView />\n          </ViewPort>\n        </Route>\n        <Route path=\"/dashboard/create-tickets\">\n          <ViewPort>\n            <CreateTicket />\n          </ViewPort>\n        </Route>\n        <Route path=\"/dashboard/tickets\">\n          <ViewPort>\n            <TicketList />\n          </ViewPort>\n        </Route>\n        <Route path=\"/dashboard/view-ticket\">\n          <ViewPort>\n            <ViewTicket />\n          </ViewPort>\n        </Route>\n      </section>\n    </main>\n  );\n};\n\nexport default DashBoard;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./component/Login/Login\";\nimport DashBoard from \"./component/DashBoard/DashBoard\";\n\nconst App = () => {\n  const [isLogged, setIsLogged] = useState(false);\n  const changeLoginStatus = () => {\n    setIsLogged(!isLogged);\n  };\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        {isLogged ? <Redirect to=\"/dashboard/overview\" /> : <Login changeLoginStatus={changeLoginStatus} />}\n      </Route>\n      <Route path=\"/dashboard\">\n        <DashBoard isLogged={isLogged} changeLoginStatus={changeLoginStatus} />\n      </Route>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.3a28f09b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-small.6ba09fbc.png\";"],"sourceRoot":""}